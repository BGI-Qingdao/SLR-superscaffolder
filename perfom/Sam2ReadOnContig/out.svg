<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="373" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="373" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::move_iterator (1 samples, 1.96%)</title><rect x="958.6" y="165" width="23.2" height="15.0" fill="rgb(224,1,19)" rx="2" ry="2" />
<text text-anchor="" x="961.63" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::stLFR::BarcodeIdHelper::Id (1 samples, 1.96%)</title><rect x="889.2" y="261" width="23.2" height="15.0" fill="rgb(250,65,24)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >B..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>irq_exit (1 samples, 1.96%)</title><rect x="750.4" y="53" width="23.1" height="15.0" fill="rgb(253,203,54)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>scsi_dispatch_cmd (2 samples, 3.92%)</title><rect x="10.0" y="69" width="46.3" height="15.0" fill="rgb(252,169,29)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >scsi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libstdc++.so.6.0.22] (2 samples, 3.92%)</title><rect x="195.1" y="277" width="46.3" height="15.0" fill="rgb(236,176,3)" rx="2" ry="2" />
<text text-anchor="" x="198.10" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[lib..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (1 samples, 1.96%)</title><rect x="889.2" y="213" width="23.2" height="15.0" fill="rgb(243,175,51)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;BGIQD::SAM::MatchData*&gt; (1 samples, 1.96%)</title><rect x="866.1" y="197" width="23.1" height="15.0" fill="rgb(236,135,39)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;BGIQD::SAM::MatchData, std::allocator&lt;BGIQD::SAM::MatchData&gt; &gt;::_M_erase_at_end (1 samples, 1.96%)</title><rect x="866.1" y="245" width="23.1" height="15.0" fill="rgb(240,119,53)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::stLFR::BarcodeId::AddTag (1 samples, 1.96%)</title><rect x="889.2" y="245" width="23.2" height="15.0" fill="rgb(225,203,35)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >B..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 1.96%)</title><rect x="981.8" y="213" width="23.1" height="15.0" fill="rgb(242,146,39)" rx="2" ry="2" />
<text text-anchor="" x="984.76" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::SAM::PairedSAMParser::CurrentPair (7 samples, 13.73%)</title><rect x="727.3" y="277" width="161.9" height="15.0" fill="rgb(234,185,17)" rx="2" ry="2" />
<text text-anchor="" x="730.25" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >BGIQD::SAM::PairedSA..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 1.96%)</title><rect x="819.8" y="261" width="23.1" height="15.0" fill="rgb(238,38,10)" rx="2" ry="2" />
<text text-anchor="" x="822.80" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;BGIQD::SAM::MatchInfo*&gt;, BGIQD::SAM::MatchInfo*, BGIQD::SAM::MatchInfo&gt; (1 samples, 1.96%)</title><rect x="750.4" y="165" width="23.1" height="15.0" fill="rgb(235,44,18)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;BGIQD::SAM::MatchInfo, std::allocator&lt;BGIQD::SAM::MatchInfo&gt; &gt;::~vector (1 samples, 1.96%)</title><rect x="866.1" y="133" width="23.1" height="15.0" fill="rgb(253,83,22)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>entry_SYSCALL_64_fastpath (3 samples, 5.88%)</title><rect x="79.4" y="277" width="69.4" height="15.0" fill="rgb(236,24,17)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >entry_S..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vfs_write (3 samples, 5.88%)</title><rect x="79.4" y="245" width="69.4" height="15.0" fill="rgb(243,137,12)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vfs_write</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::stLFR::readName2Barcode (4 samples, 7.84%)</title><rect x="912.4" y="261" width="92.5" height="15.0" fill="rgb(221,136,18)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >BGIQD::stLF..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::_S_key (1 samples, 1.96%)</title><rect x="889.2" y="181" width="23.2" height="15.0" fill="rgb(233,14,16)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__xfs_get_blocks (1 samples, 1.96%)</title><rect x="79.4" y="133" width="23.1" height="15.0" fill="rgb(230,62,37)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>generic_file_read_iter (2 samples, 3.92%)</title><rect x="10.0" y="197" width="46.3" height="15.0" fill="rgb(215,122,47)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >gene..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::SAM::LineParser::ParseStringAsCIGAR (2 samples, 3.92%)</title><rect x="727.3" y="245" width="46.2" height="15.0" fill="rgb(235,110,53)" rx="2" ry="2" />
<text text-anchor="" x="730.25" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >BGIQ..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>queue_unplugged (2 samples, 3.92%)</title><rect x="10.0" y="117" width="46.3" height="15.0" fill="rgb(232,209,21)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >queu..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>entry_SYSCALL_64_fastpath (2 samples, 3.92%)</title><rect x="10.0" y="277" width="46.3" height="15.0" fill="rgb(207,197,9)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >entr..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ostream (2 samples, 3.92%)</title><rect x="195.1" y="293" width="46.3" height="15.0" fill="rgb(226,62,11)" rx="2" ry="2" />
<text text-anchor="" x="198.10" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std:..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;unsigned long&gt; (1 samples, 1.96%)</title><rect x="1166.9" y="309" width="23.1" height="15.0" fill="rgb(213,157,35)" rx="2" ry="2" />
<text text-anchor="" x="1169.86" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memcmp_sse4_1 (1 samples, 1.96%)</title><rect x="1028.0" y="309" width="23.2" height="15.0" fill="rgb(237,186,28)" rx="2" ry="2" />
<text text-anchor="" x="1031.04" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kmem_zone_alloc (1 samples, 1.96%)</title><rect x="125.7" y="117" width="23.1" height="15.0" fill="rgb(245,192,49)" rx="2" ry="2" />
<text text-anchor="" x="128.69" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >k..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (10 samples, 19.61%)</title><rect x="10.0" y="309" width="231.4" height="15.0" fill="rgb(237,32,36)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ret_from_intr (1 samples, 1.96%)</title><rect x="750.4" y="85" width="23.1" height="15.0" fill="rgb(243,217,52)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::SAM::MatchDetail::~MatchDetail (1 samples, 1.96%)</title><rect x="866.1" y="149" width="23.1" height="15.0" fill="rgb(232,212,25)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >B..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sam2ReadInConti (51 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(239,193,52)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Sam2ReadInConti</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>file_update_time (2 samples, 3.92%)</title><rect x="102.5" y="165" width="46.3" height="15.0" fill="rgb(225,198,41)" rx="2" ry="2" />
<text text-anchor="" x="105.55" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >file..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__uninitialized_move_if_noexcept_a&lt;BGIQD::SAM::MatchInfo*, BGIQD::SAM::MatchInfo*, std::allocator&lt;BGIQD::SAM::MatchInfo&gt; &gt; (1 samples, 1.96%)</title><rect x="750.4" y="181" width="23.1" height="15.0" fill="rgb(212,79,2)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_page_cache_readahead (2 samples, 3.92%)</title><rect x="10.0" y="165" width="46.3" height="15.0" fill="rgb(213,98,47)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__do..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::ostream::_M_insert&lt;unsigned long&gt; (1 samples, 1.96%)</title><rect x="218.2" y="261" width="23.2" height="15.0" fill="rgb(242,38,4)" rx="2" ry="2" />
<text text-anchor="" x="221.24" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::uflow (1 samples, 1.96%)</title><rect x="704.1" y="309" width="23.2" height="15.0" fill="rgb(236,66,41)" rx="2" ry="2" />
<text text-anchor="" x="707.12" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_log_done (1 samples, 1.96%)</title><rect x="102.5" y="117" width="23.2" height="15.0" fill="rgb(235,192,9)" rx="2" ry="2" />
<text text-anchor="" x="105.55" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>scsi_request_fn (2 samples, 3.92%)</title><rect x="10.0" y="85" width="46.3" height="15.0" fill="rgb(217,76,44)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >scsi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;BGIQD::SAM::MatchData, std::allocator&lt;BGIQD::SAM::MatchData&gt; &gt;::clear (1 samples, 1.96%)</title><rect x="866.1" y="261" width="23.1" height="15.0" fill="rgb(244,186,24)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kmem_cache_alloc (1 samples, 1.96%)</title><rect x="125.7" y="101" width="23.1" height="15.0" fill="rgb(230,229,24)" rx="2" ry="2" />
<text text-anchor="" x="128.69" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >k..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_file_read_iter (2 samples, 3.92%)</title><rect x="10.0" y="213" width="46.3" height="15.0" fill="rgb(227,212,11)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xfs_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (1 samples, 1.96%)</title><rect x="195.1" y="261" width="23.1" height="15.0" fill="rgb(226,220,36)" rx="2" ry="2" />
<text text-anchor="" x="198.10" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__do_softirq (1 samples, 1.96%)</title><rect x="750.4" y="37" width="23.1" height="15.0" fill="rgb(223,9,54)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::copy&lt;std::move_iterator&lt;BGIQD::SAM::MatchInfo*&gt;, BGIQD::SAM::MatchInfo*&gt; (1 samples, 1.96%)</title><rect x="750.4" y="117" width="23.1" height="15.0" fill="rgb(207,208,5)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_file_write_iter (3 samples, 5.88%)</title><rect x="79.4" y="213" width="69.4" height="15.0" fill="rgb(239,78,30)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xfs_fil..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 1.96%)</title><rect x="172.0" y="293" width="23.1" height="15.0" fill="rgb(249,45,32)" rx="2" ry="2" />
<text text-anchor="" x="174.96" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_IO_getc (12 samples, 23.53%)</title><rect x="241.4" y="309" width="277.6" height="15.0" fill="rgb(253,170,6)" rx="2" ry="2" />
<text text-anchor="" x="244.37" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_IO_getc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_vm_write_begin (1 samples, 1.96%)</title><rect x="79.4" y="165" width="23.1" height="15.0" fill="rgb(217,96,48)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ata_scsi_queuecmd (2 samples, 3.92%)</title><rect x="10.0" y="53" width="46.3" height="15.0" fill="rgb(212,200,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ata_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>entry_SYSCALL_64_after_swapgs (1 samples, 1.96%)</title><rect x="148.8" y="293" width="23.2" height="15.0" fill="rgb(221,97,34)" rx="2" ry="2" />
<text text-anchor="" x="151.82" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 5.88%)</title><rect x="912.4" y="197" width="69.4" height="15.0" fill="rgb(228,184,43)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::ve..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Destroy&lt;BGIQD::SAM::MatchData*, BGIQD::SAM::MatchData&gt; (1 samples, 1.96%)</title><rect x="866.1" y="229" width="23.1" height="15.0" fill="rgb(208,214,11)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_file_aio_write_checks (2 samples, 3.92%)</title><rect x="102.5" y="181" width="46.3" height="15.0" fill="rgb(249,128,53)" rx="2" ry="2" />
<text text-anchor="" x="105.55" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xfs_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>blk_finish_plug (2 samples, 3.92%)</title><rect x="10.0" y="149" width="46.3" height="15.0" fill="rgb(215,176,18)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >blk_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_log_commit_cil (1 samples, 1.96%)</title><rect x="102.5" y="133" width="23.2" height="15.0" fill="rgb(215,162,44)" rx="2" ry="2" />
<text text-anchor="" x="105.55" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>generic_perform_write (1 samples, 1.96%)</title><rect x="79.4" y="181" width="23.1" height="15.0" fill="rgb(223,77,12)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >g..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 1.96%)</title><rect x="935.5" y="149" width="23.1" height="15.0" fill="rgb(209,173,1)" rx="2" ry="2" />
<text text-anchor="" x="938.49" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vfs_write (3 samples, 5.88%)</title><rect x="79.4" y="229" width="69.4" height="15.0" fill="rgb(248,70,2)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__vfs_w..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;::_M_ptr (1 samples, 1.96%)</title><rect x="889.2" y="133" width="23.2" height="15.0" fill="rgb(244,126,21)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 1.96%)</title><rect x="1004.9" y="277" width="23.1" height="15.0" fill="rgb(208,6,49)" rx="2" ry="2" />
<text text-anchor="" x="1007.90" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3 samples, 5.88%)</title><rect x="912.4" y="229" width="69.4" height="15.0" fill="rgb(230,37,14)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::ve..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::find (1 samples, 1.96%)</title><rect x="889.2" y="229" width="23.2" height="15.0" fill="rgb(217,111,53)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 5.88%)</title><rect x="912.4" y="213" width="69.4" height="15.0" fill="rgb(212,185,6)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::ve..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memcmp_sse4_1 (1 samples, 1.96%)</title><rect x="842.9" y="245" width="23.2" height="15.0" fill="rgb(236,109,6)" rx="2" ry="2" />
<text text-anchor="" x="845.94" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;::_M_valptr (1 samples, 1.96%)</title><rect x="889.2" y="149" width="23.2" height="15.0" fill="rgb(215,174,48)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 1.96%)</title><rect x="935.5" y="165" width="23.1" height="15.0" fill="rgb(211,191,20)" rx="2" ry="2" />
<text text-anchor="" x="938.49" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::move_iterator (1 samples, 1.96%)</title><rect x="912.4" y="149" width="23.1" height="15.0" fill="rgb(217,152,29)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;BGIQD::SAM::MatchInfo*&gt;, BGIQD::SAM::MatchInfo*&gt; (1 samples, 1.96%)</title><rect x="750.4" y="133" width="23.1" height="15.0" fill="rgb(248,50,32)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;BGIQD::SAM::MatchInfo, std::allocator&lt;BGIQD::SAM::MatchInfo&gt; &gt;::_M_realloc_insert&lt;BGIQD::SAM::MatchInfo const&amp;&gt; (1 samples, 1.96%)</title><rect x="750.4" y="197" width="23.1" height="15.0" fill="rgb(248,101,11)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___libc_write (4 samples, 7.84%)</title><rect x="56.3" y="293" width="92.5" height="15.0" fill="rgb(245,77,21)" rx="2" ry="2" />
<text text-anchor="" x="59.27" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__GI___libc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_trans_add_item (1 samples, 1.96%)</title><rect x="125.7" y="133" width="23.1" height="15.0" fill="rgb(241,201,29)" rx="2" ry="2" />
<text text-anchor="" x="128.69" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::SAM::MatchData::~MatchData (1 samples, 1.96%)</title><rect x="866.1" y="165" width="23.1" height="15.0" fill="rgb(253,35,37)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >B..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memcpy_avx_unaligned (1 samples, 1.96%)</title><rect x="819.8" y="245" width="23.1" height="15.0" fill="rgb(225,46,8)" rx="2" ry="2" />
<text text-anchor="" x="822.80" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (13 samples, 25.49%)</title><rect x="727.3" y="293" width="300.7" height="15.0" fill="rgb(217,159,32)" rx="2" ry="2" />
<text text-anchor="" x="730.25" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__memcpy (1 samples, 1.96%)</title><rect x="56.3" y="277" width="23.1" height="15.0" fill="rgb(241,40,18)" rx="2" ry="2" />
<text text-anchor="" x="59.27" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_raw_spin_unlock_irqrestore (2 samples, 3.92%)</title><rect x="10.0" y="37" width="46.3" height="15.0" fill="rgb(242,28,46)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_raw..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::operator==&lt;char&gt; (1 samples, 1.96%)</title><rect x="842.9" y="261" width="23.2" height="15.0" fill="rgb(232,165,46)" rx="2" ry="2" />
<text text-anchor="" x="845.94" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 5.88%)</title><rect x="912.4" y="181" width="69.4" height="15.0" fill="rgb(226,210,19)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::__..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__xfs_trans_commit (1 samples, 1.96%)</title><rect x="102.5" y="149" width="23.2" height="15.0" fill="rgb(227,122,54)" rx="2" ry="2" />
<text text-anchor="" x="105.55" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (13 samples, 25.49%)</title><rect x="727.3" y="309" width="300.7" height="15.0" fill="rgb(230,191,43)" rx="2" ry="2" />
<text text-anchor="" x="730.25" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__libc_start_main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 7.84%)</title><rect x="1051.2" y="309" width="92.5" height="15.0" fill="rgb(238,146,7)" rx="2" ry="2" />
<text text-anchor="" x="1054.18" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::getlin..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::locale::operator= (1 samples, 1.96%)</title><rect x="1143.7" y="309" width="23.2" height="15.0" fill="rgb(230,204,40)" rx="2" ry="2" />
<text text-anchor="" x="1146.73" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (51 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(225,167,2)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 1.96%)</title><rect x="981.8" y="181" width="23.1" height="15.0" fill="rgb(216,65,15)" rx="2" ry="2" />
<text text-anchor="" x="984.76" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_read (2 samples, 3.92%)</title><rect x="10.0" y="261" width="46.3" height="15.0" fill="rgb(227,152,23)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sys_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 1.96%)</title><rect x="935.5" y="117" width="23.1" height="15.0" fill="rgb(238,94,37)" rx="2" ry="2" />
<text text-anchor="" x="938.49" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::SAM::LineParser::ParseAsMatchData (2 samples, 3.92%)</title><rect x="727.3" y="261" width="46.2" height="15.0" fill="rgb(251,61,3)" rx="2" ry="2" />
<text text-anchor="" x="730.25" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >BGIQ..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::SAM::LineParser::ParseStringAsCIGAR (1 samples, 1.96%)</title><rect x="750.4" y="229" width="23.1" height="15.0" fill="rgb(249,112,54)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >B..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::operator!=&lt;BGIQD::SAM::MatchData*, std::vector&lt;BGIQD::SAM::MatchData, std::allocator&lt;BGIQD::SAM::MatchData&gt; &gt; &gt; (1 samples, 1.96%)</title><rect x="796.7" y="261" width="23.1" height="15.0" fill="rgb(242,193,52)" rx="2" ry="2" />
<text text-anchor="" x="799.67" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__blk_run_queue (2 samples, 3.92%)</title><rect x="10.0" y="101" width="46.3" height="15.0" fill="rgb(224,137,35)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__bl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::_S_value (1 samples, 1.96%)</title><rect x="889.2" y="165" width="23.2" height="15.0" fill="rgb(235,170,51)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__copy_move_a&lt;true, BGIQD::SAM::MatchInfo*, BGIQD::SAM::MatchInfo*&gt; (1 samples, 1.96%)</title><rect x="750.4" y="101" width="23.1" height="15.0" fill="rgb(239,200,4)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_file_buffered_aio_write (3 samples, 5.88%)</title><rect x="79.4" y="197" width="69.4" height="15.0" fill="rgb(252,121,17)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >xfs_fil..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 1.96%)</title><rect x="981.8" y="245" width="23.1" height="15.0" fill="rgb(217,216,43)" rx="2" ry="2" />
<text text-anchor="" x="984.76" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>blk_flush_plug_list (2 samples, 3.92%)</title><rect x="10.0" y="133" width="46.3" height="15.0" fill="rgb(252,205,31)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >blk_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__make_move_if_noexcept_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (1 samples, 1.96%)</title><rect x="912.4" y="165" width="23.1" height="15.0" fill="rgb(206,187,50)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__normal_iterator&lt;BGIQD::SAM::MatchData*, std::vector&lt;BGIQD::SAM::MatchData, std::allocator&lt;BGIQD::SAM::MatchData&gt; &gt; &gt;::__normal_iterator (1 samples, 1.96%)</title><rect x="773.5" y="261" width="23.2" height="15.0" fill="rgb(225,99,25)" rx="2" ry="2" />
<text text-anchor="" x="776.53" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_IO_sputbackc (2 samples, 3.92%)</title><rect x="519.0" y="309" width="46.3" height="15.0" fill="rgb(210,49,52)" rx="2" ry="2" />
<text text-anchor="" x="522.02" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_IO_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xlog_ungrant_log_space (1 samples, 1.96%)</title><rect x="102.5" y="101" width="23.2" height="15.0" fill="rgb(207,155,7)" rx="2" ry="2" />
<text text-anchor="" x="105.55" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::vector&lt;BGIQD::SAM::MatchInfo, std::allocator&lt;BGIQD::SAM::MatchInfo&gt; &gt;::push_back (1 samples, 1.96%)</title><rect x="750.4" y="213" width="23.1" height="15.0" fill="rgb(233,111,34)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::uninitialized_copy&lt;std::move_iterator&lt;BGIQD::SAM::MatchInfo*&gt;, BGIQD::SAM::MatchInfo*&gt; (1 samples, 1.96%)</title><rect x="750.4" y="149" width="23.1" height="15.0" fill="rgb(251,125,0)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Destroy&lt;BGIQD::SAM::MatchData*&gt; (1 samples, 1.96%)</title><rect x="866.1" y="213" width="23.1" height="15.0" fill="rgb(223,156,9)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main::{lambda (5 samples, 9.80%)</title><rect x="889.2" y="277" width="115.7" height="15.0" fill="rgb(208,196,44)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >main::{lambda</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BGIQD::STRING::split (3 samples, 5.88%)</title><rect x="912.4" y="245" width="69.4" height="15.0" fill="rgb(243,13,26)" rx="2" ry="2" />
<text text-anchor="" x="915.35" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >BGIQD::..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 1.96%)</title><rect x="935.5" y="133" width="23.1" height="15.0" fill="rgb(227,190,48)" rx="2" ry="2" />
<text text-anchor="" x="938.49" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__block_write_begin (1 samples, 1.96%)</title><rect x="79.4" y="149" width="23.1" height="15.0" fill="rgb(227,208,26)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 1.96%)</title><rect x="981.8" y="229" width="23.1" height="15.0" fill="rgb(250,218,48)" rx="2" ry="2" />
<text text-anchor="" x="984.76" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xlog_grant_sub_space.isra.5 (1 samples, 1.96%)</title><rect x="102.5" y="85" width="23.2" height="15.0" fill="rgb(213,54,52)" rx="2" ry="2" />
<text text-anchor="" x="105.55" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 1.96%)</title><rect x="981.8" y="197" width="23.1" height="15.0" fill="rgb(226,121,51)" rx="2" ry="2" />
<text text-anchor="" x="984.76" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_IO_ungetc (6 samples, 11.76%)</title><rect x="565.3" y="309" width="138.8" height="15.0" fill="rgb(227,145,18)" rx="2" ry="2" />
<text text-anchor="" x="568.29" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_IO_ungetc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ondemand_readahead (2 samples, 3.92%)</title><rect x="10.0" y="181" width="46.3" height="15.0" fill="rgb(248,114,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >onde..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___libc_read (2 samples, 3.92%)</title><rect x="10.0" y="293" width="46.3" height="15.0" fill="rgb(207,103,6)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__GI..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 1.96%)</title><rect x="935.5" y="101" width="23.1" height="15.0" fill="rgb(240,112,33)" rx="2" ry="2" />
<text text-anchor="" x="938.49" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vfs_read (2 samples, 3.92%)</title><rect x="10.0" y="245" width="46.3" height="15.0" fill="rgb(247,159,49)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >vfs_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt; &gt;::_M_lower_bound (1 samples, 1.96%)</title><rect x="889.2" y="197" width="23.2" height="15.0" fill="rgb(231,59,10)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, int&gt; &gt;::_M_addr (1 samples, 1.96%)</title><rect x="889.2" y="117" width="23.2" height="15.0" fill="rgb(212,122,48)" rx="2" ry="2" />
<text text-anchor="" x="892.22" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>xfs_vn_update_time (1 samples, 1.96%)</title><rect x="125.7" y="149" width="23.1" height="15.0" fill="rgb(226,67,33)" rx="2" ry="2" />
<text text-anchor="" x="128.69" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_write (3 samples, 5.88%)</title><rect x="79.4" y="261" width="69.4" height="15.0" fill="rgb(223,28,11)" rx="2" ry="2" />
<text text-anchor="" x="82.41" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sys_write</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Destroy&lt;BGIQD::SAM::MatchData&gt; (1 samples, 1.96%)</title><rect x="866.1" y="181" width="23.1" height="15.0" fill="rgb(217,78,30)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_IRQ (1 samples, 1.96%)</title><rect x="750.4" y="69" width="23.1" height="15.0" fill="rgb(205,179,54)" rx="2" ry="2" />
<text text-anchor="" x="753.39" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__vfs_read (2 samples, 3.92%)</title><rect x="10.0" y="229" width="46.3" height="15.0" fill="rgb(206,123,34)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__vf..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 1.96%)</title><rect x="195.1" y="245" width="23.1" height="15.0" fill="rgb(253,76,1)" rx="2" ry="2" />
<text text-anchor="" x="198.10" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Vector_base&lt;BGIQD::SAM::MatchInfo, std::allocator&lt;BGIQD::SAM::MatchInfo&gt; &gt;::_M_get_Tp_allocator (1 samples, 1.96%)</title><rect x="866.1" y="117" width="23.1" height="15.0" fill="rgb(215,195,23)" rx="2" ry="2" />
<text text-anchor="" x="869.08" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
</svg>
